Hi Arnold,

I just pushed an update to the Italian "gawktexi.in".
Please, "propagate" it.

I have packed in a ZIP file all the scripts used
to test all the 66 examples/files that can be
extracted from the Gawk book.

To use it you should unzip the file in a test
"bin" directory, and change a few variables inside
the "gawkeg" script.

At the beginning of the "gawkeg" script there is
an indication of where are the variables to be
changed, basically the name of the test "bin"
directory where the script are ($b) the name of
where to put the "eg" directory ($s) and the names
of the directories where the "gawktexi.in" file
can be found.

Hopefully that should be enough.

Just run:
./gawkeg
...which defaults to "en"

or

./gawkeg it

To see all what can be done, at the "gawkeg"
prompt just type:

h<ENTER>

...for the "d" option (differences between English
and Italian script) to work, the "other" directory
must exist.

I tried to run the thing on another PC (under
WSL), from the "distribution" and changing the
test directories, and it seems to work.

Better not to use it with the "root" user, some
tests would give different results (e.g. the
"readable" one).

The script uses a couple of programs, "scegli" and
"extract", of which only the executables are in the
ZIP file. If it is of interest, you can have the C
source files, but they are a mess: the two
programs have been written for a different set of
tasks, and should be rewritten, but since they
work...

The English tests should all run fine. The Italian
ones do run here, but only with the just updated
Italian "gawktexi.in".

Please let me know if you are able to use the
script, and if you have remarks, questions, etc.,
they are welcome.

All the best, Antonio

PS I did not bother to put licenses, but
everything can be used/modified freely, consider
it with the same license as gawk.
-- 
   /||\    | Antonio Colombo
  / || \   |  azc100@gmail.com
 /  ()  \  | antonio@geekcorp.com
(___||___) |   azc10@yahoo.com

==================

Looking into the example programs, I wonder:

Should gettime.awk be renamed getlocaltime.awk
(or viceversa)? When checking alarm.awk, it
speaks of getlocaltime, but then you have
to use "gettime.awk" instead.

A few other gawk scripts have names slightly
different from the name in the "eg/whatever"
directory.

bits2str.awk is actually also contained in
testbits.awk, contrary to the philosophy of
the "modularity". testbits.awk should not
contain it (I think). And the bits2str.awk
instructions are contained twice in gawktexi.in,
once for themselves, and once in testbits.awk.
I wonder if something should be changed here.

To get the test for cut.awk working, I had to
put "-f getopt.awk" BEFORE "-f cut.awk", not really
sure why. I wonder if it should be noted
somewhere. It is the case also for other "users"
of "getopt".

The transfile.awk example is not extracted.
I wonder if it should or not...
To make the example work, I had to change in transfile.awk
FILENAME != _oldfilename @{
to
FILENAME != _oldfilename && _filename_ != FILENAME @{
..or beginfile() would be invoked more than necessary

On a detail, for consistency with _filename_,
_oldfilename should be called
_oldfilename_

histsort.awk should be changed to use the input
records only AFTER the initial number,
otherwise all entries are different by definition.
I found no way to get history without the number
of the command, so I just cut it out for the test.

noassign.awk does not work (at least for me).
ARGC and ARGV give you only the input files,
not the real ARGC and ARGV passed by the Operating
System to gawk.
Variables are not seen at all, so they are always
used inside the program (unless I missed something).
If one acts on PROCINFO["argc"] and PROCINFO["argv"],
one sees "everything", as evidenced modifying noassign.awk
BEGIN {
    if (No_command_assign) {
        for ( j in PROCINFO["argv"] ) { print
"#",j,PROCINFO["argv"][j],"#"; }
        disable_assigns(ARGC, ARGV)
    }
}
I suspect the real ARGC and ARGV would not be changed.
Also, noassign.awk does not do anything about the "-v"
before the assignment. I wonder what to do.

ord.awk is ok, but it does not manage ASCII above 127
(European accented letter, e.g.). Not sure if it should
be modified.

In pi.awk it should be noted inside the program that
it needs intdiv0.awk (as it is noted in the text).

process_array.awk is in processarray.awk:
maybe the name should be the same.

I am not sure that the output of shell_quote is OK
(too many "'"s and """s).

========================

In the last update to gawktexi,in, where you explain "ls",
an "old" file should probably be present, to show the
difference in field 8, when the last modification
date goes back to 6 months or more:
-rwxrwxr-x 1 azc10 azc10   1427 apr 19 16:56 gawkdiff
-rwxrwxr-x 1 azc10 azc10    381 apr 13  2020 fs_set.awk
..."apr" is in Italian, "Jun" would be "giu"

========================
