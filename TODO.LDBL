* Replacement math routines. - DONE.
   Update awk version fp_math.awk for the changes in C code ?
   FUTURE: Improvemnet/Optimization.
     [1] Use truncated Taylor series and/or approximating polynomials.
         It would require at least two versions (80-bit and 128-bit).
     [2] Horner's rule to evaluate truncated series.
     [3] Payne and Hanek Reduction Algorithm to provide more sig digs
         for sin and cos with large arguments. It most likely involves more
         than just extending the PI table to few thousand entries.
         Pay particular attention to the case when x is almost an integer
         multiple of PI/2. For a clean-room implementation, consider the
         feasibility of using (64-bit) integer arithmetic.
         References:
         * Elementary Functions: Algorithms and Implementation. Jean-Michel Muller,
           Birkhäuser Boston.
	 * Handbook of Floating-Point Arithmetic. Jean-Michel Muller et. el.,
           Birkhäuser Boston.
         * Argument Reduction for Huge Arguments: Good to the Last Bit. K. C. Ng,
           SunPro, Sun Microsystems, Inc. Business.
           Original fdmlib implementation copied by most libm.
	
*  Don't use adjust_uint(uintmax_t n) from floatcomp.c, it is for AWKNUM.
   What is the point of floor() and ceil() wrappers? Don't have a clue.
   - DONE. Not sure if it is necessary for any long double and uintmax_t
	   combination found in the wild. Looks like ceil() and floor()
           wrappers are for VMS; One probably should update comments
           in floatcomp.c.
