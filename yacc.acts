
case 1:
# line 301 "awk.y"
{ expression_value = yypvt[-0].nodeval; } break;
case 2:
# line 306 "awk.y"
{ 
			if (yypvt[-0].nodeval != NULL)
				yyval.nodeval = yypvt[-0].nodeval;
			else
				yyval.nodeval = NULL;
			yyerrok;
		} break;
case 3:
# line 315 "awk.y"
{
			if (yypvt[-0].nodeval == NULL)
				yyval.nodeval = yypvt[-1].nodeval;
			else if (yypvt[-1].nodeval == NULL)
				yyval.nodeval = yypvt[-0].nodeval;
			else {
				if (yypvt[-1].nodeval->type != Node_rule_list)
					yypvt[-1].nodeval = node(yypvt[-1].nodeval, Node_rule_list,
						(NODE*)NULL);
				yyval.nodeval = append_right (yypvt[-1].nodeval,
				   node(yypvt[-0].nodeval, Node_rule_list,(NODE *) NULL));
			}
			yyerrok;
		} break;
case 4:
# line 329 "awk.y"
{ yyval.nodeval = NULL; } break;
case 5:
# line 330 "awk.y"
{ yyval.nodeval = NULL; } break;
case 6:
# line 335 "awk.y"
{
		if (begin_block) {
			if (begin_block->type != Node_rule_list)
				begin_block = node(begin_block, Node_rule_list,
					(NODE *)NULL);
			append_right (begin_block, node(
			    node((NODE *)NULL, Node_rule_node, yypvt[-0].nodeval),
			    Node_rule_list, (NODE *)NULL) );
		} else
			begin_block = node((NODE *)NULL, Node_rule_node, yypvt[-0].nodeval);
		yyval.nodeval = NULL;
		yyerrok;
	  } break;
case 7:
# line 349 "awk.y"
{
		if (end_block) {
			if (end_block->type != Node_rule_list)
				end_block = node(end_block, Node_rule_list,
					(NODE *)NULL);
			append_right (end_block, node(
			    node((NODE *)NULL, Node_rule_node, yypvt[-0].nodeval),
			    Node_rule_list, (NODE *)NULL));
		} else
			end_block = node((NODE *)NULL, Node_rule_node, yypvt[-0].nodeval);
		yyval.nodeval = NULL;
		yyerrok;
	  } break;
case 8:
# line 363 "awk.y"
{
		msg ("error near line %d: BEGIN blocks must have an action part", lineno);
		errcount++;
		yyerrok;
	  } break;
case 9:
# line 369 "awk.y"
{
		msg ("error near line %d: END blocks must have an action part", lineno);
		errcount++;
		yyerrok;
	  } break;
case 10:
# line 375 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_rule_node, yypvt[-0].nodeval); yyerrok; } break;
case 11:
# line 377 "awk.y"
{ yyval.nodeval = node ((NODE *)NULL, Node_rule_node, yypvt[-0].nodeval); yyerrok; } break;
case 12:
# line 379 "awk.y"
{ if(yypvt[-1].nodeval) yyval.nodeval = node (yypvt[-1].nodeval, Node_rule_node, (NODE *)NULL); yyerrok; } break;
case 13:
# line 381 "awk.y"
{
			func_install(yypvt[-1].nodeval, yypvt[-0].nodeval);
			yyval.nodeval = NULL;
			yyerrok;
		} break;
case 14:
# line 390 "awk.y"
{ yyval.sval = yypvt[-0].sval; } break;
case 15:
# line 392 "awk.y"
{ yyval.sval = yypvt[-0].sval; } break;
case 16:
# line 397 "awk.y"
{
			param_counter = 0;
		} break;
case 17:
# line 401 "awk.y"
{
			yyval.nodeval = append_right(make_param(yypvt[-4].sval), yypvt[-2].nodeval);
		} break;
case 18:
# line 408 "awk.y"
{ yyval.nodeval = yypvt[-1].nodeval; } break;
case 19:
# line 414 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 20:
# line 416 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 21:
# line 418 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_and, yypvt[-0].nodeval); } break;
case 22:
# line 420 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_or, yypvt[-0].nodeval); } break;
case 23:
# line 422 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_not,(NODE *) NULL); } break;
case 24:
# line 424 "awk.y"
{ yyval.nodeval = yypvt[-1].nodeval; } break;
case 25:
# line 429 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 26:
# line 431 "awk.y"
{ yyval.nodeval = mkrangenode ( node(yypvt[-2].nodeval, Node_cond_pair, yypvt[-0].nodeval) ); } break;
case 27:
# line 436 "awk.y"
{ 
		  yyval.nodeval = node(
		       node(make_number((AWKNUM)0),Node_field_spec,(NODE*)NULL),
		       Node_match, yypvt[-0].nodeval);
		} break;
case 28:
# line 449 "awk.y"
{ ++want_regexp; } break;
case 29:
# line 451 "awk.y"
{
		  want_regexp = 0;
		  yyval.nodeval = node((NODE *)NULL,Node_regex,(NODE *)mk_re_parse(yypvt[-1].sval, 0));
		  yyval.nodeval -> re_case = 0;
		  emalloc (yyval.nodeval -> re_text, char *, strlen(yypvt[-1].sval)+1, "regexp");
		  strcpy (yyval.nodeval -> re_text, yypvt[-1].sval);
		} break;
case 30:
# line 462 "awk.y"
{
			/* empty actions are different from missing actions */
			yyval.nodeval = node ((NODE *) NULL, Node_illegal, (NODE *) NULL);
		} break;
case 31:
# line 467 "awk.y"
{ yyval.nodeval = yypvt[-2].nodeval ; } break;
case 32:
# line 472 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 33:
# line 474 "awk.y"
{
			if (yypvt[-1].nodeval->type != Node_statement_list)
				yypvt[-1].nodeval = node(yypvt[-1].nodeval, Node_statement_list,(NODE *)NULL);
	    		yyval.nodeval = append_right(yypvt[-1].nodeval,
				node( yypvt[-0].nodeval, Node_statement_list, (NODE *)NULL));
	    		yyerrok;
		} break;
case 34:
# line 482 "awk.y"
{ yyval.nodeval = NULL; } break;
case 35:
# line 484 "awk.y"
{ yyval.nodeval = NULL; } break;
case 36:
# line 489 "awk.y"
{ yyval.nodetypeval = Node_illegal; } break;
case 37:
# line 491 "awk.y"
{ yyval.nodetypeval = Node_illegal; } break;
case 38:
# line 497 "awk.y"
{ yyval.nodeval = NULL; } break;
case 39:
# line 499 "awk.y"
{ yyval.nodeval = yypvt[-1].nodeval; } break;
case 40:
# line 501 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 41:
# line 503 "awk.y"
{ yyval.nodeval = node (yypvt[-3].nodeval, Node_K_while, yypvt[-0].nodeval); } break;
case 42:
# line 505 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_K_do, yypvt[-5].nodeval); } break;
case 43:
# line 507 "awk.y"
{
		yyval.nodeval = node (yypvt[-0].nodeval, Node_K_arrayfor, make_for_loop(variable(yypvt[-5].sval),
			(NODE *)NULL, variable(yypvt[-3].sval)));
	  } break;
case 44:
# line 512 "awk.y"
{
		yyval.nodeval = node(yypvt[-0].nodeval, Node_K_for, (NODE *)make_for_loop(yypvt[-7].nodeval, yypvt[-5].nodeval, yypvt[-3].nodeval));
	  } break;
case 45:
# line 516 "awk.y"
{
		yyval.nodeval = node (yypvt[-0].nodeval, Node_K_for,
			(NODE *)make_for_loop(yypvt[-6].nodeval, (NODE *)NULL, yypvt[-3].nodeval));
	  } break;
case 46:
# line 522 "awk.y"
{ yyval.nodeval = node ((NODE *)NULL, Node_K_break, (NODE *)NULL); } break;
case 47:
# line 525 "awk.y"
{ yyval.nodeval = node ((NODE *)NULL, Node_K_continue, (NODE *)NULL); } break;
case 48:
# line 527 "awk.y"
{ yyval.nodeval = node (yypvt[-3].nodeval, yypvt[-5].nodetypeval, yypvt[-1].nodeval); } break;
case 49:
# line 529 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-3].nodetypeval, yypvt[-1].nodeval); } break;
case 50:
# line 531 "awk.y"
{ yyval.nodeval = node ((NODE *)NULL, Node_K_next, (NODE *)NULL); } break;
case 51:
# line 533 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_K_exit, (NODE *)NULL); } break;
case 52:
# line 535 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_K_return, (NODE *)NULL); } break;
case 53:
# line 537 "awk.y"
{ yyval.nodeval = node (variable(yypvt[-4].sval), Node_K_delete, yypvt[-2].nodeval); } break;
case 54:
# line 539 "awk.y"
{ yyval.nodeval = yypvt[-1].nodeval; } break;
case 55:
# line 544 "awk.y"
{ yyval.nodetypeval = yypvt[-0].nodetypeval; } break;
case 56:
# line 546 "awk.y"
{ yyval.nodetypeval = yypvt[-0].nodetypeval; } break;
case 57:
# line 551 "awk.y"
{
		yyval.nodeval = node(yypvt[-3].nodeval, Node_K_if, 
			node(yypvt[-0].nodeval, Node_if_branches, (NODE *)NULL));
	  } break;
case 58:
# line 557 "awk.y"
{ yyval.nodeval = node (yypvt[-6].nodeval, Node_K_if,
				node (yypvt[-3].nodeval, Node_if_branches, yypvt[-0].nodeval)); } break;
case 59:
# line 563 "awk.y"
{ yyval.nodetypeval = NULL; } break;
case 60:
# line 565 "awk.y"
{ yyval.nodetypeval = NULL; } break;
case 61:
# line 570 "awk.y"
{ yyval.nodetypeval = NULL; } break;
case 62:
# line 572 "awk.y"
{ yyval.nodetypeval = NULL; } break;
case 63:
# line 577 "awk.y"
{ yyval.nodeval = NULL; } break;
case 64:
# line 579 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_redirect_input, (NODE *)NULL); } break;
case 65:
# line 584 "awk.y"
{ yyval.nodeval = NULL; } break;
case 66:
# line 586 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_redirect_output, (NODE *)NULL); } break;
case 67:
# line 588 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_redirect_append, (NODE *)NULL); } break;
case 68:
# line 590 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_redirect_pipe, (NODE *)NULL); } break;
case 69:
# line 595 "awk.y"
{ yyval.nodeval = NULL; } break;
case 70:
# line 597 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 71:
# line 602 "awk.y"
{ yyval.nodeval = make_param(yypvt[-0].sval); } break;
case 72:
# line 604 "awk.y"
{ yyval.nodeval = append_right(yypvt[-2].nodeval, make_param(yypvt[-0].sval)); yyerrok; } break;
case 73:
# line 606 "awk.y"
{ yyval.nodeval = NULL; } break;
case 74:
# line 608 "awk.y"
{ yyval.nodeval = NULL; } break;
case 75:
# line 610 "awk.y"
{ yyval.nodeval = NULL; } break;
case 76:
# line 616 "awk.y"
{ yyval.nodeval = NULL; } break;
case 77:
# line 618 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 78:
# line 623 "awk.y"
{ yyval.nodeval = NULL; } break;
case 79:
# line 625 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 80:
# line 630 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_expression_list, (NODE *)NULL); } break;
case 81:
# line 632 "awk.y"
{
		yyval.nodeval = append_right(yypvt[-2].nodeval,
			node( yypvt[-0].nodeval, Node_expression_list, (NODE *)NULL));
		yyerrok;
	  } break;
case 82:
# line 638 "awk.y"
{ yyval.nodeval = NULL; } break;
case 83:
# line 640 "awk.y"
{ yyval.nodeval = NULL; } break;
case 84:
# line 642 "awk.y"
{ yyval.nodeval = NULL; } break;
case 85:
# line 644 "awk.y"
{ yyval.nodeval = NULL; } break;
case 86:
# line 649 "awk.y"
{ yyval.nodeval = NULL; } break;
case 87:
# line 651 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 88:
# line 656 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_expression_list, (NODE *)NULL); } break;
case 89:
# line 658 "awk.y"
{
			yyval.nodeval = append_right(yypvt[-2].nodeval,
				node( yypvt[-0].nodeval, Node_expression_list, (NODE *)NULL));
			yyerrok;
		} break;
case 90:
# line 664 "awk.y"
{ yyval.nodeval = NULL; } break;
case 91:
# line 666 "awk.y"
{ yyval.nodeval = NULL; } break;
case 92:
# line 668 "awk.y"
{ yyval.nodeval = NULL; } break;
case 93:
# line 670 "awk.y"
{ yyval.nodeval = NULL; } break;
case 94:
# line 675 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 95:
# line 677 "awk.y"
{ yyval.nodeval = node (variable(yypvt[-0].sval), Node_in_array, yypvt[-3].nodeval); } break;
case 96:
# line 679 "awk.y"
{
		  yyval.nodeval = node (yypvt[-0].nodeval, Node_K_getline,
			 node (yypvt[-3].nodeval, Node_redirect_pipein, (NODE *)NULL));
		} break;
case 97:
# line 684 "awk.y"
{
		  yyval.nodeval = node (yypvt[-1].nodeval, Node_K_getline, yypvt[-0].nodeval);
		} break;
case 98:
# line 688 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_and, yypvt[-0].nodeval); } break;
case 99:
# line 690 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_or, yypvt[-0].nodeval); } break;
case 100:
# line 692 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 101:
# line 694 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 102:
# line 696 "awk.y"
{ yyval.nodeval = node (variable(yypvt[-0].sval), Node_in_array, yypvt[-2].nodeval); } break;
case 103:
# line 698 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 104:
# line 700 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_less, yypvt[-0].nodeval); } break;
case 105:
# line 702 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_greater, yypvt[-0].nodeval); } break;
case 106:
# line 704 "awk.y"
{ yyval.nodeval = node(yypvt[-4].nodeval, Node_cond_exp, node(yypvt[-2].nodeval, Node_if_branches, yypvt[-0].nodeval));} break;
case 107:
# line 706 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_concat, yypvt[-0].nodeval); } break;
case 108:
# line 708 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 109:
# line 713 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 110:
# line 715 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_and, yypvt[-0].nodeval); } break;
case 111:
# line 717 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_or, yypvt[-0].nodeval); } break;
case 112:
# line 719 "awk.y"
{
		  yyval.nodeval = node (yypvt[-1].nodeval, Node_K_getline, yypvt[-0].nodeval);
		} break;
case 113:
# line 723 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 114:
# line 725 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 115:
# line 727 "awk.y"
{ yyval.nodeval = node (variable(yypvt[-0].sval), Node_in_array, yypvt[-2].nodeval); } break;
case 116:
# line 729 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, yypvt[-1].nodetypeval, yypvt[-0].nodeval); } break;
case 117:
# line 731 "awk.y"
{ yyval.nodeval = node(yypvt[-4].nodeval, Node_cond_exp, node(yypvt[-2].nodeval, Node_if_branches, yypvt[-0].nodeval));} break;
case 118:
# line 733 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_concat, yypvt[-0].nodeval); } break;
case 119:
# line 735 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 120:
# line 740 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_not,(NODE *) NULL); } break;
case 121:
# line 742 "awk.y"
{ yyval.nodeval = yypvt[-1].nodeval; } break;
case 122:
# line 744 "awk.y"
{ yyval.nodeval = snode (yypvt[-1].nodeval, Node_builtin, yypvt[-3].ptrval); } break;
case 123:
# line 746 "awk.y"
{ yyval.nodeval = snode ((NODE *)NULL, Node_builtin, yypvt[-0].ptrval); } break;
case 124:
# line 748 "awk.y"
{ yyval.nodeval = node(yypvt[-1].nodeval, yypvt[-5].nodetypeval, yypvt[-3].nodeval); } break;
case 125:
# line 750 "awk.y"
{ yyval.nodeval = node(yypvt[-1].nodeval, yypvt[-5].nodetypeval, yypvt[-3].nodeval); } break;
case 126:
# line 752 "awk.y"
{ yyval.nodeval = node(yypvt[-3].nodeval, yypvt[-5].nodetypeval, yypvt[-1].nodeval); } break;
case 127:
# line 754 "awk.y"
{ yyval.nodeval = node(yypvt[-3].nodeval, yypvt[-5].nodetypeval, yypvt[-1].nodeval); } break;
case 128:
# line 756 "awk.y"
{
		yyval.nodeval = node (yypvt[-1].nodeval, Node_func_call, make_string(yypvt[-3].sval, strlen(yypvt[-3].sval)));
	  } break;
case 129:
# line 760 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_preincrement, (NODE *)NULL); } break;
case 130:
# line 762 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_predecrement, (NODE *)NULL); } break;
case 131:
# line 764 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_postincrement, (NODE *)NULL); } break;
case 132:
# line 766 "awk.y"
{ yyval.nodeval = node (yypvt[-1].nodeval, Node_postdecrement, (NODE *)NULL); } break;
case 133:
# line 768 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 134:
# line 770 "awk.y"
{ yyval.nodeval = make_number (yypvt[-0].fval); } break;
case 135:
# line 772 "awk.y"
{ yyval.nodeval = make_string (yypvt[-0].sval, -1); } break;
case 136:
# line 776 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_exp, yypvt[-0].nodeval); } break;
case 137:
# line 778 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_times, yypvt[-0].nodeval); } break;
case 138:
# line 780 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_quotient, yypvt[-0].nodeval); } break;
case 139:
# line 782 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_mod, yypvt[-0].nodeval); } break;
case 140:
# line 784 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_plus, yypvt[-0].nodeval); } break;
case 141:
# line 786 "awk.y"
{ yyval.nodeval = node (yypvt[-2].nodeval, Node_minus, yypvt[-0].nodeval); } break;
case 142:
# line 788 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_unary_minus, (NODE *)NULL); } break;
case 143:
# line 790 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 144:
# line 795 "awk.y"
{ yyval.nodeval = NULL; } break;
case 145:
# line 797 "awk.y"
{ yyval.nodeval = yypvt[-0].nodeval; } break;
case 146:
# line 802 "awk.y"
{ yyval.nodeval = variable (yypvt[-0].sval); } break;
case 147:
# line 804 "awk.y"
{ yyval.nodeval = node (variable(yypvt[-3].sval), Node_subscript, yypvt[-1].nodeval); } break;
case 148:
# line 806 "awk.y"
{ yyval.nodeval = node (yypvt[-0].nodeval, Node_field_spec, (NODE *)NULL); } break;
case 150:
# line 814 "awk.y"
{ yyerrok; } break;
case 151:
# line 818 "awk.y"
{ yyval.nodetypeval = Node_illegal; yyerrok; } break;
case 154:
# line 827 "awk.y"
{ yyerrok; } break;
case 155:
# line 830 "awk.y"
